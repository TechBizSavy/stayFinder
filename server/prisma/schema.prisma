// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  isHost    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  listings Listing[]
  bookings Booking[]

  @@map("users")
}

model Listing {
  id          String   @id @default(cuid())
  title       String
  description String
  price       Float
  location    String
  latitude    Float?
  longitude   Float?
  images      String[]
  amenities   String[]
  maxGuests   Int
  bedrooms    Int
  bathrooms   Int
  hostId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  host     User      @relation(fields: [hostId], references: [id], onDelete: Cascade)
  bookings Booking[]

  @@map("listings")
}

model Booking {
  id        String        @id @default(cuid())
  checkIn   DateTime
  checkOut  DateTime
  guests    Int
  totalPrice Float
  status    BookingStatus @default(PENDING)
  userId    String
  listingId String
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  // Relations
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)

  @@map("bookings")
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}